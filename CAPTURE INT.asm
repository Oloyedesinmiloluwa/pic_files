TMR0	EQU	1
PC		EQU	2
STATUS	EQU	3
PORTA	EQU	5
PORTB	EQU	6
PORTC	EQU	7
PORTD	EQU	8
PORTE	EQU	9
TRISA	EQU	85H
TRISB	EQU	86H
TRISC	EQU	87H
TRISD	EQU	88H
TRISE	EQU	89H
OPTION_R	EQU 81H
ZEROBIT	EQU	2
CARRY	EQU	0
CCP1CON	EQU	17H
INTCON	EQU 0BH
GIE		EQU	7
PIE1	EQU	8CH
PIR1	EQU	0CH
PEIE	EQU	6
CCP1IF	EQU	2
CCP1IE	EQU	2
EDGE	EQU	0
READY	EQU	1
COUNT	EQU	20H
TSTATUS		EQU	21H
TW		EQU	22H
TPORTB		EQU	23H
COUNTER		EQU	24H
C5		EQU	25H
NUM		EQU	26H
COUNTER2 EQU	27H


	LIST	P=16F877
	ORG		0
	GOTO	START
	ORG		4
	GOTO	ISR
	__CONFIG	H'3FFB'
;SUBROUTINE
DELAYP5 CLRF TMR0 ;START TMR0.
LOOPB MOVF TMR0,W ;READ TMR0 INTO W.
		SUBLW .2 ;TIME-3  195
	BTFSS STATUS,ZEROBIT ;Check TIME-W ¼ 0
	GOTO LOOPB ;Time is not ¼ 3.
	RETLW 0
DELAY3 CLRF TMR0 ;START TMR0.
LOOPC MOVF TMR0,W ;READ TMR0 INTO W.
		SUBLW .64 ;TIME-3
	BTFSS STATUS,ZEROBIT ;Check TIME-W ¼ 0
	GOTO LOOPC ;Time is not ¼ 3.
	NOP ;add extra delay
	NOP
	RETLW 0
FILE1		MOVF	STORE,W
			MOVWF	FILE1
			GOTO	READLOOP

DECDISP1	MOVF	FILE1,W
			CALL	ALPHABET
DECDISP2	MOVF	FILE2,W
			CALL	ALPHABET



RAMSTORE
			MOVF	COUNTER2,W
			ADDWF	PC
			GOTO	;RETURN PATT
			GOTO	FILE1
			GOTO	FILE2

BIT0	BCF		STORE,0
		BTFSC	PORTB,0
		BSF		STORE,0
		GOTO	RESTORE
BIT1	BCF		STORE,1
		BTFSC	PORTB,0
		BSF		STORE,1
		GOTO	RESTORE
BIT2	BCF		STORE,2
		BTFSC	PORTB,0
		BSF		STORE,2
		GOTO	RESTORE
BIT3	BCF		STORE,3
		BTFSC	PORTB,0
		BSF		STORE,3
		GOTO	RESTORE
BIT4	BCF		STORE,4
		BTFSC	PORTB,0
		BSF		STORE,4
		GOTO	RESTORE
BIT5	BCF		STORE,5
		BTFSC	PORTB,0
		BSF		STORE,5
		GOTO	RESTORE
BIT6	BCF		STORE,6
		BTFSC	PORTB,0
		BSF		STORE,6
		GOTO	RESTORE
BIT7	BCF		STORE,7
		BTFSC	PORTB,0
		BSF		STORE,7
		GOTO	RESTORE

WRITE	
		BSF 	STATUS,5 ;BANK1
		BSF 	EECON1,WREN ;set WRITE ENABLE
		BCF 	STATUS,5 ;BANK0
		MOVF 	STORE,W ;move COUNT to EEDATA
		MOVWF 	EEDATA
		MOVF	NUM,W
		MOVWF 	EEADR
		BSF 	STATUS,5 ;BANK1
		MOVLW 	55H ;55 and AA initiates write cycle
		MOVWF 	EECON2
		MOVLW 	0AAH
		MOVWF 	EECON2
		BSF 	EECON1,WR ;WRITE data to EEADR 0
WRDONE 	BTFSC 	EECON1,WR
		GOTO 	WRDONE 
		BCF 	EECON1,WREN
		BCF 	STATUS,5 ;BANK0
		RETLW 	0

READ	
		MOVF	COUNTER2,W
		SUBWF	NUM
		BTFSC	STATUS,ZEROBIT
		GOTO	SAVED
		INCF	COUNTER2		;TO READ FROM EEPROM SEQUENTIALLY
		MOVF	COUNTER2,W
		MOVWF	EEADR
		BSF STATUS,5 ;BANK1
		BSF EECON1,RD
		BCF STATUS,5 ;BANK0
		MOVF EEDATA,W
		MOVWF STORE
		RETLW 0

RECEIVE	
		MOVF	COUNTER,W
		SUBLW	.2
		BTFSC	STATUS,ZEROBIT
		GOTO	BIT0
		MOVF	COUNTER,W
		SUBLW	.3
		BTFSC	STATUS,ZEROBIT
		GOTO	BIT1
		MOVF	COUNTER,W
		SUBLW	.4
		BTFSC	STATUS,ZEROBIT
		GOTO	BIT2
		MOVF	COUNTER,W
		SUBLW	.5
		BTFSC	STATUS,ZEROBIT
		GOTO	BIT3
		MOVF	COUNTER,W
		SUBLW	.6
		BTFSC	STATUS,ZEROBIT
		GOTO	BIT4
		MOVF	COUNTER,W
		SUBLW	.7
		BTFSC	STATUS,ZEROBIT
		GOTO	BIT5
		MOVF	COUNTER,W
		SUBLW	.8
		BTFSC	STATUS,ZEROBIT
		GOTO	BIT6
		MOVF	COUNTER,W
		SUBLW	.9
		BTFSC	STATUS,ZEROBIT
		GOTO	BIT7
		MOVF	COUNTER,W
		SUBLW	.11
		BTFSS	STATUS,ZEROBIT
		GOTO	RESTORE
						;INDICATE
		CLRF	COUNTER
		INCF	NUM		;COUNTS CHARACTER
		RETLW	.0

ISR		MOVWF	TW
	SWAPF	STATUS,W
		MOVWF	TSTATUS
		MOVF	PORTB,W
		MOVWF	TPORTB
		INCF	COUNTER			;increase counter here
		MOVF	COUNTER,W
		MOVWF	PORTB
		CALL	DELAY3
		CLRF	PORTB

		MOVF	COUNTER,W
		SUBLW	.1
		BTFSS	STATUS,ZEROBIT
		GOTO	RECEIVE
		
		
RESTORE		MOVF	TPORTB,W
		MOVWF	PORTB
		SWAPF	TSTATUS,W
		MOVWF	STATUS
		MOVF	TW,W
		BCF		PIR1,CCP1IF
		RETFIE


START	BSF	STATUS,5
		MOVLW	.0
		MOVWF	TRISB
		MOVLW	.0
		MOVWF	TRISA
		MOVLW	0FH
		MOVWF	TRISC
		MOVLW	07H
		MOVWF	OPTION_R
		BSF		PIE1,CCP1IE
		CLRF	STATUS
		CLRF	PORTA
		CLRF	PORTB
		CLRF	COUNTER
		CLRF	COUNTER2
		MOVLW	.4
		MOVWF	CCP1CON
		CLRF	INTCON
		
		BCF		PIR1,CCP1IF
		BSF		INTCON,GIE
		BSF		INTCON,PEIE

		
BEGIN		CALL DEFAULT
CHECK IF COMPLETE
		;CHECK IF COUNTER IS 0
		MOVF	STORE,W
		SUBLW	5AH		; END OF INPUT WHEN ENTER IS PRESSED
		BTFSS	STATUS,ZEROBIT
		CALL	WRITE
		
READLOOP CALL	READ
		GOTO	RAMSTORE	;READS INTO RAM
SAVED	CALL	DECDISP		;DECODE AND DISPLAY


